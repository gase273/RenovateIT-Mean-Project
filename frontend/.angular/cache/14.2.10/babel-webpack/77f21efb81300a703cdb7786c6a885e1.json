{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateTuple = void 0;\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst util_1 = require(\"../../compile/util\");\n\nconst code_1 = require(\"../code\");\n\nconst def = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n\n  code(cxt) {\n    const {\n      schema,\n      it\n    } = cxt;\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema);\n    it.items = true;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    cxt.ok((0, code_1.validateArray)(cxt));\n  }\n\n};\n\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n  const {\n    gen,\n    parentSchema,\n    data,\n    keyword,\n    it\n  } = cxt;\n  checkStrictTuple(parentSchema);\n\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n  }\n\n  const valid = gen.name(\"valid\");\n  const len = gen.const(\"len\", (0, codegen_1._)`${data}.length`);\n  schArr.forEach((sch, i) => {\n    if ((0, util_1.alwaysValidSchema)(it, sch)) return;\n    gen.if((0, codegen_1._)`${len} > ${i}`, () => cxt.subschema({\n      keyword,\n      schemaProp: i,\n      dataProp: i\n    }, valid));\n    cxt.ok(valid);\n  });\n\n  function checkStrictTuple(sch) {\n    const {\n      opts,\n      errSchemaPath\n    } = it;\n    const l = schArr.length;\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n      (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n    }\n  }\n}\n\nexports.validateTuple = validateTuple;\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateTuple","codegen_1","require","util_1","code_1","def","keyword","type","schemaType","before","code","cxt","schema","it","Array","isArray","items","alwaysValidSchema","ok","validateArray","extraItems","schArr","gen","parentSchema","data","checkStrictTuple","opts","unevaluated","length","mergeEvaluated","valid","name","len","const","_","forEach","sch","i","if","subschema","schemaProp","dataProp","errSchemaPath","l","fullTuple","minItems","maxItems","strictTuples","msg","checkStrictMode","default"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/vocabularies/applicator/items.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}