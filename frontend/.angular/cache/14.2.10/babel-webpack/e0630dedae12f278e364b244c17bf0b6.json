{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst util_1 = require(\"../../compile/util\");\n\nconst code_1 = require(\"../code\");\n\nconst additionalItems_1 = require(\"./additionalItems\");\n\nconst error = {\n  message: ({\n    params: {\n      len\n    }\n  }) => (0, codegen_1.str)`must NOT have more than ${len} items`,\n  params: ({\n    params: {\n      len\n    }\n  }) => (0, codegen_1._)`{limit: ${len}}`\n};\nconst def = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n\n  code(cxt) {\n    const {\n      schema,\n      parentSchema,\n      it\n    } = cxt;\n    const {\n      prefixItems\n    } = parentSchema;\n    it.items = true;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    if (prefixItems) (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);else cxt.ok((0, code_1.validateArray)(cxt));\n  }\n\n};\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","util_1","code_1","additionalItems_1","error","message","params","len","str","_","def","keyword","type","schemaType","before","code","cxt","schema","parentSchema","it","prefixItems","items","alwaysValidSchema","validateAdditionalItems","ok","validateArray","default"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/vocabularies/applicator/items2020.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,mBAAD,CAAjC;;AACA,MAAMI,KAAK,GAAG;EACVC,OAAO,EAAE,CAAC;IAAEC,MAAM,EAAE;MAAEC;IAAF;EAAV,CAAD,KAAyB,CAAC,GAAGR,SAAS,CAACS,GAAd,CAAoB,2BAA0BD,GAAI,QAD1E;EAEVD,MAAM,EAAE,CAAC;IAAEA,MAAM,EAAE;MAAEC;IAAF;EAAV,CAAD,KAAyB,CAAC,GAAGR,SAAS,CAACU,CAAd,CAAkB,WAAUF,GAAI;AAFvD,CAAd;AAIA,MAAMG,GAAG,GAAG;EACRC,OAAO,EAAE,OADD;EAERC,IAAI,EAAE,OAFE;EAGRC,UAAU,EAAE,CAAC,QAAD,EAAW,SAAX,CAHJ;EAIRC,MAAM,EAAE,aAJA;EAKRV,KALQ;;EAMRW,IAAI,CAACC,GAAD,EAAM;IACN,MAAM;MAAEC,MAAF;MAAUC,YAAV;MAAwBC;IAAxB,IAA+BH,GAArC;IACA,MAAM;MAAEI;IAAF,IAAkBF,YAAxB;IACAC,EAAE,CAACE,KAAH,GAAW,IAAX;IACA,IAAI,CAAC,GAAGpB,MAAM,CAACqB,iBAAX,EAA8BH,EAA9B,EAAkCF,MAAlC,CAAJ,EACI;IACJ,IAAIG,WAAJ,EACI,CAAC,GAAGjB,iBAAiB,CAACoB,uBAAtB,EAA+CP,GAA/C,EAAoDI,WAApD,EADJ,KAGIJ,GAAG,CAACQ,EAAJ,CAAO,CAAC,GAAGtB,MAAM,CAACuB,aAAX,EAA0BT,GAA1B,CAAP;EACP;;AAhBO,CAAZ;AAkBAnB,OAAO,CAAC6B,OAAR,GAAkBhB,GAAlB"},"metadata":{},"sourceType":"script"}