{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\n\nfunction isJSONType(x) {\n  return typeof x == \"string\" && jsonTypes.has(x);\n}\n\nexports.isJSONType = isJSONType;\n\nfunction getRules() {\n  const groups = {\n    number: {\n      type: \"number\",\n      rules: []\n    },\n    string: {\n      type: \"string\",\n      rules: []\n    },\n    array: {\n      type: \"array\",\n      rules: []\n    },\n    object: {\n      type: \"object\",\n      rules: []\n    }\n  };\n  return {\n    types: { ...groups,\n      integer: true,\n      boolean: true,\n      null: true\n    },\n    rules: [{\n      rules: []\n    }, groups.number, groups.string, groups.array, groups.object],\n    post: {\n      rules: []\n    },\n    all: {},\n    keywords: {}\n  };\n}\n\nexports.getRules = getRules;","map":{"version":3,"names":["Object","defineProperty","exports","value","getRules","isJSONType","_jsonTypes","jsonTypes","Set","x","has","groups","number","type","rules","string","array","object","types","integer","boolean","null","post","all","keywords"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/compile/rules.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACG,UAAR,GAAqB,KAAK,CAA7C;AACA,MAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,QAAnD,EAA6D,OAA7D,CAAnB;AACA,MAAMC,SAAS,GAAG,IAAIC,GAAJ,CAAQF,UAAR,CAAlB;;AACA,SAASD,UAAT,CAAoBI,CAApB,EAAuB;EACnB,OAAO,OAAOA,CAAP,IAAY,QAAZ,IAAwBF,SAAS,CAACG,GAAV,CAAcD,CAAd,CAA/B;AACH;;AACDP,OAAO,CAACG,UAAR,GAAqBA,UAArB;;AACA,SAASD,QAAT,GAAoB;EAChB,MAAMO,MAAM,GAAG;IACXC,MAAM,EAAE;MAAEC,IAAI,EAAE,QAAR;MAAkBC,KAAK,EAAE;IAAzB,CADG;IAEXC,MAAM,EAAE;MAAEF,IAAI,EAAE,QAAR;MAAkBC,KAAK,EAAE;IAAzB,CAFG;IAGXE,KAAK,EAAE;MAAEH,IAAI,EAAE,OAAR;MAAiBC,KAAK,EAAE;IAAxB,CAHI;IAIXG,MAAM,EAAE;MAAEJ,IAAI,EAAE,QAAR;MAAkBC,KAAK,EAAE;IAAzB;EAJG,CAAf;EAMA,OAAO;IACHI,KAAK,EAAE,EAAE,GAAGP,MAAL;MAAaQ,OAAO,EAAE,IAAtB;MAA4BC,OAAO,EAAE,IAArC;MAA2CC,IAAI,EAAE;IAAjD,CADJ;IAEHP,KAAK,EAAE,CAAC;MAAEA,KAAK,EAAE;IAAT,CAAD,EAAgBH,MAAM,CAACC,MAAvB,EAA+BD,MAAM,CAACI,MAAtC,EAA8CJ,MAAM,CAACK,KAArD,EAA4DL,MAAM,CAACM,MAAnE,CAFJ;IAGHK,IAAI,EAAE;MAAER,KAAK,EAAE;IAAT,CAHH;IAIHS,GAAG,EAAE,EAJF;IAKHC,QAAQ,EAAE;EALP,CAAP;AAOH;;AACDtB,OAAO,CAACE,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}