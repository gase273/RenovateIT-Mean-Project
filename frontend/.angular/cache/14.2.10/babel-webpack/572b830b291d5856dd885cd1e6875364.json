{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst util_1 = require(\"../../compile/util\");\n\nconst equal_1 = require(\"../../runtime/equal\");\n\nconst error = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({\n    schemaCode\n  }) => (0, codegen_1._)`{allowedValues: ${schemaCode}}`\n};\nconst def = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n\n  code(cxt) {\n    const {\n      gen,\n      data,\n      $data,\n      schema,\n      schemaCode,\n      it\n    } = cxt;\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\");\n    const useLoop = schema.length >= it.opts.loopEnum;\n    let eql;\n\n    const getEql = () => eql !== null && eql !== void 0 ? eql : eql = (0, util_1.useFunc)(gen, equal_1.default);\n\n    let valid;\n\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\");\n      cxt.block$data(valid, loopEnum);\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\");\n      const vSchema = gen.const(\"vSchema\", schemaCode);\n      valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n    }\n\n    cxt.pass(valid);\n\n    function loopEnum() {\n      gen.assign(valid, false);\n      gen.forOf(\"v\", schemaCode, v => gen.if((0, codegen_1._)`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n    }\n\n    function equalCode(vSchema, i) {\n      const sch = schema[i];\n      return typeof sch === \"object\" && sch !== null ? (0, codegen_1._)`${getEql()}(${data}, ${vSchema}[${i}])` : (0, codegen_1._)`${data} === ${sch}`;\n    }\n  }\n\n};\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","util_1","equal_1","error","message","params","schemaCode","_","def","keyword","schemaType","$data","code","cxt","gen","data","schema","it","length","Error","useLoop","opts","loopEnum","eql","getEql","useFunc","default","valid","let","block$data","Array","isArray","vSchema","const","or","map","_x","i","equalCode","pass","assign","forOf","v","if","break","sch"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/vocabularies/validation/enum.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}