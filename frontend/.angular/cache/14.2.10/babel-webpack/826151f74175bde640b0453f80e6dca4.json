{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callRef = exports.getValidate = void 0;\n\nconst ref_error_1 = require(\"../../compile/ref_error\");\n\nconst code_1 = require(\"../code\");\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst names_1 = require(\"../../compile/names\");\n\nconst compile_1 = require(\"../../compile\");\n\nconst util_1 = require(\"../../compile/util\");\n\nconst def = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n\n  code(cxt) {\n    const {\n      gen,\n      schema: $ref,\n      it\n    } = cxt;\n    const {\n      baseId,\n      schemaEnv: env,\n      validateName,\n      opts,\n      self\n    } = it;\n    const {\n      root\n    } = env;\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef();\n    const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n    if (schOrEnv === undefined) throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n    if (schOrEnv instanceof compile_1.SchemaEnv) return callValidate(schOrEnv);\n    return inlineRefSchema(schOrEnv);\n\n    function callRootRef() {\n      if (env === root) return callRef(cxt, validateName, env, env.$async);\n      const rootName = gen.scopeValue(\"root\", {\n        ref: root\n      });\n      return callRef(cxt, (0, codegen_1._)`${rootName}.validate`, root, root.$async);\n    }\n\n    function callValidate(sch) {\n      const v = getValidate(cxt, sch);\n      callRef(cxt, v, sch, sch.$async);\n    }\n\n    function inlineRefSchema(sch) {\n      const schName = gen.scopeValue(\"schema\", opts.code.source === true ? {\n        ref: sch,\n        code: (0, codegen_1.stringify)(sch)\n      } : {\n        ref: sch\n      });\n      const valid = gen.name(\"valid\");\n      const schCxt = cxt.subschema({\n        schema: sch,\n        dataTypes: [],\n        schemaPath: codegen_1.nil,\n        topSchemaRef: schName,\n        errSchemaPath: $ref\n      }, valid);\n      cxt.mergeEvaluated(schCxt);\n      cxt.ok(valid);\n    }\n  }\n\n};\n\nfunction getValidate(cxt, sch) {\n  const {\n    gen\n  } = cxt;\n  return sch.validate ? gen.scopeValue(\"validate\", {\n    ref: sch.validate\n  }) : (0, codegen_1._)`${gen.scopeValue(\"wrapper\", {\n    ref: sch\n  })}.validate`;\n}\n\nexports.getValidate = getValidate;\n\nfunction callRef(cxt, v, sch, $async) {\n  const {\n    gen,\n    it\n  } = cxt;\n  const {\n    allErrors,\n    schemaEnv: env,\n    opts\n  } = it;\n  const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n  if ($async) callAsyncRef();else callSyncRef();\n\n  function callAsyncRef() {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\");\n    const valid = gen.let(\"valid\");\n    gen.try(() => {\n      gen.code((0, codegen_1._)`await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n      addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n\n      if (!allErrors) gen.assign(valid, true);\n    }, e => {\n      gen.if((0, codegen_1._)`!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n      addErrorsFrom(e);\n      if (!allErrors) gen.assign(valid, false);\n    });\n    cxt.ok(valid);\n  }\n\n  function callSyncRef() {\n    cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n  }\n\n  function addErrorsFrom(source) {\n    const errs = (0, codegen_1._)`${source}.errors`;\n    gen.assign(names_1.default.vErrors, (0, codegen_1._)`${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n\n    gen.assign(names_1.default.errors, (0, codegen_1._)`${names_1.default.vErrors}.length`);\n  }\n\n  function addEvaluatedFrom(source) {\n    var _a;\n\n    if (!it.opts.unevaluated) return;\n    const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated; // TODO refactor\n\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n        }\n      } else {\n        const props = gen.var(\"props\", (0, codegen_1._)`${source}.evaluated.props`);\n        it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n      }\n    }\n\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n        }\n      } else {\n        const items = gen.var(\"items\", (0, codegen_1._)`${source}.evaluated.items`);\n        it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n      }\n    }\n  }\n}\n\nexports.callRef = callRef;\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","callRef","getValidate","ref_error_1","require","code_1","codegen_1","names_1","compile_1","util_1","def","keyword","schemaType","code","cxt","gen","schema","$ref","it","baseId","schemaEnv","env","validateName","opts","self","root","callRootRef","schOrEnv","resolveRef","call","undefined","default","uriResolver","SchemaEnv","callValidate","inlineRefSchema","$async","rootName","scopeValue","ref","_","sch","v","schName","source","stringify","valid","name","schCxt","subschema","dataTypes","schemaPath","nil","topSchemaRef","errSchemaPath","mergeEvaluated","ok","validate","allErrors","passCxt","passContext","this","callAsyncRef","callSyncRef","Error","let","try","callValidateCode","addEvaluatedFrom","assign","e","if","ValidationError","throw","addErrorsFrom","result","errs","vErrors","errors","_a","unevaluated","schEvaluated","evaluated","props","dynamicProps","var","Name","items","dynamicItems"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/vocabularies/core/ref.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}