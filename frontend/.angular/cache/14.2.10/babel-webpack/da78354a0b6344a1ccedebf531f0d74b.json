{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst util_1 = require(\"../../compile/util\");\n\nconst error = {\n  message: \"property name must be valid\",\n  params: ({\n    params\n  }) => (0, codegen_1._)`{propertyName: ${params.propertyName}}`\n};\nconst def = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n\n  code(cxt) {\n    const {\n      gen,\n      schema,\n      data,\n      it\n    } = cxt;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    const valid = gen.name(\"valid\");\n    gen.forIn(\"key\", data, key => {\n      cxt.setParams({\n        propertyName: key\n      });\n      cxt.subschema({\n        keyword: \"propertyNames\",\n        data: key,\n        dataTypes: [\"string\"],\n        propertyName: key,\n        compositeRule: true\n      }, valid);\n      gen.if((0, codegen_1.not)(valid), () => {\n        cxt.error(true);\n        if (!it.allErrors) gen.break();\n      });\n    });\n    cxt.ok(valid);\n  }\n\n};\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","util_1","error","message","params","_","propertyName","def","keyword","type","schemaType","code","cxt","gen","schema","data","it","alwaysValidSchema","valid","name","forIn","key","setParams","subschema","dataTypes","compositeRule","if","not","allErrors","break","ok","default"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/vocabularies/applicator/propertyNames.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAME,KAAK,GAAG;EACVC,OAAO,EAAE,6BADC;EAEVC,MAAM,EAAE,CAAC;IAAEA;EAAF,CAAD,KAAgB,CAAC,GAAGL,SAAS,CAACM,CAAd,CAAkB,kBAAiBD,MAAM,CAACE,YAAa;AAFrE,CAAd;AAIA,MAAMC,GAAG,GAAG;EACRC,OAAO,EAAE,eADD;EAERC,IAAI,EAAE,QAFE;EAGRC,UAAU,EAAE,CAAC,QAAD,EAAW,SAAX,CAHJ;EAIRR,KAJQ;;EAKRS,IAAI,CAACC,GAAD,EAAM;IACN,MAAM;MAAEC,GAAF;MAAOC,MAAP;MAAeC,IAAf;MAAqBC;IAArB,IAA4BJ,GAAlC;IACA,IAAI,CAAC,GAAGX,MAAM,CAACgB,iBAAX,EAA8BD,EAA9B,EAAkCF,MAAlC,CAAJ,EACI;IACJ,MAAMI,KAAK,GAAGL,GAAG,CAACM,IAAJ,CAAS,OAAT,CAAd;IACAN,GAAG,CAACO,KAAJ,CAAU,KAAV,EAAiBL,IAAjB,EAAwBM,GAAD,IAAS;MAC5BT,GAAG,CAACU,SAAJ,CAAc;QAAEhB,YAAY,EAAEe;MAAhB,CAAd;MACAT,GAAG,CAACW,SAAJ,CAAc;QACVf,OAAO,EAAE,eADC;QAEVO,IAAI,EAAEM,GAFI;QAGVG,SAAS,EAAE,CAAC,QAAD,CAHD;QAIVlB,YAAY,EAAEe,GAJJ;QAKVI,aAAa,EAAE;MALL,CAAd,EAMGP,KANH;MAOAL,GAAG,CAACa,EAAJ,CAAO,CAAC,GAAG3B,SAAS,CAAC4B,GAAd,EAAmBT,KAAnB,CAAP,EAAkC,MAAM;QACpCN,GAAG,CAACV,KAAJ,CAAU,IAAV;QACA,IAAI,CAACc,EAAE,CAACY,SAAR,EACIf,GAAG,CAACgB,KAAJ;MACP,CAJD;IAKH,CAdD;IAeAjB,GAAG,CAACkB,EAAJ,CAAOZ,KAAP;EACH;;AA1BO,CAAZ;AA4BArB,OAAO,CAACkC,OAAR,GAAkBxB,GAAlB"},"metadata":{},"sourceType":"script"}