{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"../navbar/navbar.component\";\nimport * as i4 from \"../footer/footer.component\";\nexport class AgencyComponent {\n  constructor(router, usrService) {\n    this.router = router;\n    this.usrService = usrService;\n    this.dataChange = false;\n    this.dataChangeFail = false;\n    this.passChange = false;\n    this.passChangeFail = false;\n    this.badChosen = false;\n    this.imgChange = false;\n    this.imgChangeFail = false;\n  }\n\n  ngOnInit() {\n    this.logged = JSON.parse(sessionStorage.getItem(\"loggedIn\"));\n\n    if (this.logged && this.logged.type == 1) {\n      this.agencyName = this.logged.agencyName;\n      this.address = this.logged.address;\n      this.email = this.logged.email;\n      this.phone = this.logged.phone;\n    } else this.router.navigate(['']);\n  }\n\n  changeData() {\n    this.usrService.editAgencyData(this.logged.username, this.logged.agencyName, this.address, this.desc, this.email, this.phone).subscribe(response => {\n      if (response['status'] == \"ok\") {\n        //podaci izmenjeni u bazi, sada moraju da se izmene u sessionStorage\n        this.dataChange = true;\n        this.logged.agencyName = this.agencyName;\n        this.logged.address = this.address;\n        this.logged.desc = this.desc;\n        this.logged.phone = this.phone;\n        this.logged.email = this.email;\n        sessionStorage.setItem(\"loggedIn\", JSON.stringify(this.logged));\n      } else this.dataChangeFail = true;\n    });\n  }\n\n  changePass() {\n    this.usrService.editPassword(this.logged.username, this.password, this.newPassword).subscribe(response => {\n      if (response) {\n        //sifra je uspesno promenjena ako se poklopio jedan korisnik, a to se desi ako je user+pass kombinacija dobra\n        if (response['matchedCount'] == 1) {\n          this.passChange = true;\n          this.passChangeText = \"Uspešno izmenjena lozinka!\";\n          this.logged.password = this.password;\n          sessionStorage.setItem(\"loggedIn\", JSON.stringify(this.logged));\n        } else {\n          this.passChangeFail = true;\n          this.passChangeText = \"Pogrešno uneta stara lozinka!\";\n        }\n      } else {\n        this.passChangeFail = true;\n        this.passChangeText = \"Greška pri izmeni lozinke!\";\n      }\n    });\n  }\n\n  fileChosen(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //isto kao kod registracije\n      if (event.target.value) {\n        _this.img = event.target.files[0];\n        let img = new Image();\n        img.src = URL.createObjectURL(_this.img);\n        yield img.decode();\n        if (img.naturalWidth < 100 || img.naturalWidth > 300 || img.naturalHeight < 100 || img.naturalHeight > 300) _this.badChosen = true;else _this.badChosen = false;\n      } else {\n        _this.badChosen = false;\n        _this.img = null;\n      }\n    })();\n  }\n\n  changeImg() {\n    //isto kao kod registracije\n    let form = new FormData();\n    form.append(\"profile_pic\", this.img);\n    form.append(\"user\", this.logged.username);\n    this.usrService.editImg(form).subscribe(response => {\n      if (response['status'] == 'ok') {\n        this.imgChange = true;\n        this.imgChangeText = \"Ikonica uspešno izmenjena!\";\n        this.logged.img = response[\"newImg\"];\n        sessionStorage.setItem(\"loggedIn\", JSON.stringify(this.logged));\n        this.ngOnInit();\n      } else {\n        this.imgChangeFail = true;\n        this.imgChangeText = \"Greška pri izmeni ikonice!\";\n      }\n    });\n  }\n\n}\n\nAgencyComponent.ɵfac = function AgencyComponent_Factory(t) {\n  return new (t || AgencyComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n};\n\nAgencyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AgencyComponent,\n  selectors: [[\"app-agency\"]],\n  decls: 4,\n  vars: 0,\n  template: function AgencyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navbar\");\n      i0.ɵɵelementStart(1, \"p\");\n      i0.ɵɵtext(2, \"agency works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"app-footer\");\n    }\n  },\n  dependencies: [i3.NavbarComponent, i4.FooterComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZ2VuY3kuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["AgencyComponent","constructor","router","usrService","ngOnInit","logged","JSON","parse","sessionStorage","getItem","type","agencyName","address","email","phone","navigate","changeData","editAgencyData","username","desc","subscribe","response","dataChange","setItem","stringify","dataChangeFail","changePass","editPassword","password","newPassword","passChange","passChangeText","passChangeFail","fileChosen","event","target","value","img","files","Image","src","URL","createObjectURL","decode","naturalWidth","naturalHeight","badChosen","changeImg","form","FormData","append","editImg","imgChange","imgChangeText","imgChangeFail","i0","selectors","decls","vars","template"],"sourceRoot":"","sources":["C:\\Users\\Pc\\Desktop\\RTI 3. god\\6. semestar\\PIA\\Projekat\\frontend\\src\\app\\agency\\agency.component.ts","C:\\Users\\Pc\\Desktop\\RTI 3. god\\6. semestar\\PIA\\Projekat\\frontend\\src\\app\\agency\\agency.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n\n@Component({\n  selector: 'app-agency',\n  templateUrl: './agency.component.html',\n  styleUrls: ['./agency.component.css']\n})\nexport class AgencyComponent implements OnInit {\n\n  logged: User\n  agencyName: string\n  address: string\n  email: string\n  phone: string\n  desc: string\n  dataChange: boolean = false;\n  dataChangeFail: boolean = false;\n  password: string\n  newPassword: string\n  confirm: string\n  passChange: boolean = false;\n  passChangeFail: boolean = false;\n  passChangeText: string\n  badChosen: boolean = false;\n  img: File\n  imgChange: boolean = false;\n  imgChangeFail: boolean = false;\n  imgChangeText: string\n\n  constructor(private router: Router, private usrService: UserService) { }\n\n  ngOnInit(): void {\n    this.logged = JSON.parse(sessionStorage.getItem(\"loggedIn\"))\n    if(this.logged && this.logged.type == 1) {\n      this.agencyName = this.logged.agencyName\n      this.address = this.logged.address\n      this.email = this.logged.email\n      this.phone = this.logged.phone\n    }\n    else this.router.navigate([''])\n  }\n\n  changeData() {\n    this.usrService.editAgencyData(this.logged.username, this.logged.agencyName, this.address, this.desc, this.email, this.phone).subscribe((response) => {\n      if(response['status'] == \"ok\") {\n\n        //podaci izmenjeni u bazi, sada moraju da se izmene u sessionStorage\n        this.dataChange = true\n        this.logged.agencyName = this.agencyName\n        this.logged.address = this.address\n        this.logged.desc = this.desc\n        this.logged.phone = this.phone\n        this.logged.email = this.email\n        sessionStorage.setItem(\"loggedIn\", JSON.stringify(this.logged))\n      }\n      else this.dataChangeFail = true\n    })\n  }\n\n  changePass() {\n    this.usrService.editPassword(this.logged.username, this.password, this.newPassword).subscribe((response) => {\n      if(response) {\n        //sifra je uspesno promenjena ako se poklopio jedan korisnik, a to se desi ako je user+pass kombinacija dobra\n        if(response['matchedCount'] == 1) {\n          this.passChange = true\n          this.passChangeText = \"Uspešno izmenjena lozinka!\"\n          this.logged.password = this.password\n          sessionStorage.setItem(\"loggedIn\", JSON.stringify(this.logged))\n        }\n        else {\n          this.passChangeFail = true\n          this.passChangeText = \"Pogrešno uneta stara lozinka!\"\n        }\n      }\n      else {\n        this.passChangeFail = true\n        this.passChangeText = \"Greška pri izmeni lozinke!\"\n      }\n\n    })\n  }\n\n  async fileChosen(event:any) {\n    //isto kao kod registracije\n    if(event.target.value) {\n      this.img = <File>event.target.files[0]\n      let img = new Image();\n      img.src = URL.createObjectURL(this.img);\n      await img.decode();\n      if(img.naturalWidth < 100 || img.naturalWidth > 300 || img.naturalHeight < 100 || img.naturalHeight > 300) this.badChosen = true;\n      else this.badChosen = false;\n    }\n    else {\n      this.badChosen = false;\n      this.img = null;\n    }\n  }\n\n  changeImg() {\n    //isto kao kod registracije\n    let form = new FormData()\n    form.append(\"profile_pic\", this.img)\n    form.append(\"user\", this.logged.username)\n    this.usrService.editImg(form).subscribe((response) => {\n      if(response['status'] == 'ok') {\n        this.imgChange = true;\n        this.imgChangeText = \"Ikonica uspešno izmenjena!\"\n        this.logged.img = response[\"newImg\"]\n        sessionStorage.setItem(\"loggedIn\", JSON.stringify(this.logged))\n        this.ngOnInit()\n      }\n      else {\n        this.imgChangeFail = true;\n        this.imgChangeText = \"Greška pri izmeni ikonice!\"\n      }\n    })\n  }\n}\n\n","<app-navbar></app-navbar>\n<p>agency works!</p>\n<app-footer></app-footer>\n"]},"metadata":{},"sourceType":"module"}