{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\n\nconst codegen_1 = require(\"../codegen\");\n\nconst util_1 = require(\"../util\");\n\nfunction getSubschema(it, {\n  keyword,\n  schemaProp,\n  schema,\n  schemaPath,\n  errSchemaPath,\n  topSchemaRef\n}) {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword];\n    return schemaProp === undefined ? {\n      schema: sch,\n      schemaPath: (0, codegen_1._)`${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`\n    } : {\n      schema: sch[schemaProp],\n      schemaPath: (0, codegen_1._)`${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`\n    };\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n    }\n\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath\n    };\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\n\nexports.getSubschema = getSubschema;\n\nfunction extendSubschemaData(subschema, it, {\n  dataProp,\n  dataPropType: dpType,\n  data,\n  dataTypes,\n  propertyName\n}) {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n  }\n\n  const {\n    gen\n  } = it;\n\n  if (dataProp !== undefined) {\n    const {\n      errorPath,\n      dataPathArr,\n      opts\n    } = it;\n    const nextData = gen.let(\"data\", (0, codegen_1._)`${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n    dataContextProps(nextData);\n    subschema.errorPath = (0, codegen_1.str)`${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n    subschema.parentDataProperty = (0, codegen_1._)`${dataProp}`;\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n\n    dataContextProps(nextData);\n    if (propertyName !== undefined) subschema.propertyName = propertyName; // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes;\n\n  function dataContextProps(_nextData) {\n    subschema.data = _nextData;\n    subschema.dataLevel = it.dataLevel + 1;\n    subschema.dataTypes = [];\n    it.definedProperties = new Set();\n    subschema.parentData = it.data;\n    subschema.dataNames = [...it.dataNames, _nextData];\n  }\n}\n\nexports.extendSubschemaData = extendSubschemaData;\n\nfunction extendSubschemaMode(subschema, {\n  jtdDiscriminator,\n  jtdMetadata,\n  compositeRule,\n  createErrors,\n  allErrors\n}) {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule;\n  if (createErrors !== undefined) subschema.createErrors = createErrors;\n  if (allErrors !== undefined) subschema.allErrors = allErrors;\n  subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n\n  subschema.jtdMetadata = jtdMetadata; // not inherited\n}\n\nexports.extendSubschemaMode = extendSubschemaMode;","map":{"version":3,"names":["Object","defineProperty","exports","value","extendSubschemaMode","extendSubschemaData","getSubschema","codegen_1","require","util_1","it","keyword","schemaProp","schema","schemaPath","errSchemaPath","topSchemaRef","undefined","Error","sch","_","getProperty","escapeFragment","subschema","dataProp","dataPropType","dpType","data","dataTypes","propertyName","gen","errorPath","dataPathArr","opts","nextData","let","dataContextProps","str","getErrorPath","jsPropertySyntax","parentDataProperty","Name","_nextData","dataLevel","definedProperties","Set","parentData","dataNames","jtdDiscriminator","jtdMetadata","compositeRule","createErrors","allErrors"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/compile/validate/subschema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}