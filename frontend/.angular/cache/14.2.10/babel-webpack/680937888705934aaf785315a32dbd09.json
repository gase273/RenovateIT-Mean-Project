{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst dataType_1 = require(\"../../compile/validate/dataType\");\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst util_1 = require(\"../../compile/util\");\n\nconst equal_1 = require(\"../../runtime/equal\");\n\nconst error = {\n  message: ({\n    params: {\n      i,\n      j\n    }\n  }) => (0, codegen_1.str)`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({\n    params: {\n      i,\n      j\n    }\n  }) => (0, codegen_1._)`{i: ${i}, j: ${j}}`\n};\nconst def = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n\n  code(cxt) {\n    const {\n      gen,\n      data,\n      $data,\n      schema,\n      parentSchema,\n      schemaCode,\n      it\n    } = cxt;\n    if (!$data && !schema) return;\n    const valid = gen.let(\"valid\");\n    const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n    cxt.block$data(valid, validateUniqueItems, (0, codegen_1._)`${schemaCode} === false`);\n    cxt.ok(valid);\n\n    function validateUniqueItems() {\n      const i = gen.let(\"i\", (0, codegen_1._)`${data}.length`);\n      const j = gen.let(\"j\");\n      cxt.setParams({\n        i,\n        j\n      });\n      gen.assign(valid, true);\n      gen.if((0, codegen_1._)`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n    }\n\n    function canOptimize() {\n      return itemTypes.length > 0 && !itemTypes.some(t => t === \"object\" || t === \"array\");\n    }\n\n    function loopN(i, j) {\n      const item = gen.name(\"item\");\n      const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n      const indices = gen.const(\"indices\", (0, codegen_1._)`{}`);\n      gen.for((0, codegen_1._)`;${i}--;`, () => {\n        gen.let(item, (0, codegen_1._)`${data}[${i}]`);\n        gen.if(wrongType, (0, codegen_1._)`continue`);\n        if (itemTypes.length > 1) gen.if((0, codegen_1._)`typeof ${item} == \"string\"`, (0, codegen_1._)`${item} += \"_\"`);\n        gen.if((0, codegen_1._)`typeof ${indices}[${item}] == \"number\"`, () => {\n          gen.assign(j, (0, codegen_1._)`${indices}[${item}]`);\n          cxt.error();\n          gen.assign(valid, false).break();\n        }).code((0, codegen_1._)`${indices}[${item}] = ${i}`);\n      });\n    }\n\n    function loopN2(i, j) {\n      const eql = (0, util_1.useFunc)(gen, equal_1.default);\n      const outer = gen.name(\"outer\");\n      gen.label(outer).for((0, codegen_1._)`;${i}--;`, () => gen.for((0, codegen_1._)`${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._)`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n        cxt.error();\n        gen.assign(valid, false).break(outer);\n      })));\n    }\n  }\n\n};\nexports.default = def;","map":{"version":3,"names":["Object","defineProperty","exports","value","dataType_1","require","codegen_1","util_1","equal_1","error","message","params","i","j","str","_","def","keyword","type","schemaType","$data","code","cxt","gen","data","schema","parentSchema","schemaCode","it","valid","let","itemTypes","items","getSchemaTypes","block$data","validateUniqueItems","ok","setParams","assign","if","canOptimize","loopN","loopN2","length","some","t","item","name","wrongType","checkDataTypes","opts","strictNumbers","DataType","Wrong","indices","const","for","break","eql","useFunc","default","outer","label"],"sources":["C:/Users/Pc/Desktop/RTI 3. god/6. semestar/PIA/Projekat/frontend/node_modules/ajv/dist/vocabularies/validation/uniqueItems.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}